// библиотека math
// by ArtKalun https://github.com/NickKaluzhskikh

// вкл прелюдия;

конст ПИ := 3.1415926535897932384626433832795;
конст Е := 2.7182818284590452353602874713527;

про модуль(число: вещ): вещ нч //                                             |x|
    если число -? 0.0
    то вернуть число*-1.0;
    иначе то вернуть число;
кц

про возвести_в_степень(число: вещ, степень: нат): вещ нч //                   x^y
    если степень = 0 как нат
    то вернуть 1.0;

    пер вывод: вещ := 1.0;

    для ит := 1..(степень как цел) то
        вывод := вывод * число;

    вернуть вывод;
кц

про возвести_в_квадрат(число: вещ): вещ нч //                                 x² 
    вернуть возвести_в_степень(число, 2 как нат);
кц

про возвести_в_куб(число: вещ): вещ нч //                                     x³
    вернуть возвести_в_степень(число, 3 как нат);
кц

про факториал(нач_число: цел): цел нч //                                      x!
    если нач_число = 0 
    то вернуть 1;

    пер число: цел := модуль(нач_число как вещ) как цел;
    пер вывод: цел := 1;

    для ит := 1..число то
        вывод := вывод*ит;

    вывод := вывод * (нач_число / число);

    вернуть вывод;
кц

про квадратный_корень_с_погрешностью(число: вещ, погрешность: вещ): вещ нч // ²√x ± y
    если число = 0.0 то вернуть 0.0
    
    пер х0: вещ := число;
    пер х1: вещ := (х0 + число/х0) / 2.0;
    пока модуль(х0 - х1) +? 2.0*погрешность или возвести_в_квадрат(модуль(х0 - х1)) +? 2.0*погрешность нч
        х0 := х1;
        х1 := (х0 + число/х0) / 2.0;
    кц
    вернуть х1;
кц

про квадратный_корень(число: вещ): вещ нч //                                  ²√x ± 1/1 000 000
    вернуть квадратный_корень_с_погрешностью(число, 0.000001);
кц

про округление_вверх(число: вещ): цел нч //                                   2.9 -> 3;   2.1 -> 3;   -2.1 -> -2;   -2.9 -> -2
    если число -? 0.0
    то вернуть число как цел;

    если число = (число как цел) как вещ 
    то вернуть число как цел;

    вернуть число как цел + 1;
кц

про округление_вниз(число: вещ): цел нч //                                    2.9 -> 2;   2.1 -> 2;   -2.1 -> -3;   -2.9 -> -3
    если число +? 0.0 
    то вернуть число как цел;

    если число = (число как цел) как вещ 
    то вернуть число как цел;

    вернуть число как цел - 1;
кц

про радианы(число: вещ): вещ нч //                                            градусы -> радианы
    вернуть число * ПИ / 180.0;
кц

про градусы(число: вещ): вещ нч //                                            радианы -> градусы
    вернуть число / ПИ * 180.0;
кц

про округлить(нач_число: вещ, знак: нат): вещ нч //                           2.5 -> 3;   2.4 -> 2
    пер число: вещ := нач_число * возвести_в_степень(10.0, знак);

    если число = (число как цел) как вещ нч
        вернуть нач_число;
    кц

    пер число_дроб: вещ := (число - (число как цел) как вещ) * 10.0;
    
    если число_дроб +?= 5.0 то
    вернуть (число + 1.0) как цел как вещ / возвести_в_степень(10.0, знак);
    иначе то вернуть число как цел как вещ / возвести_в_степень(10.0, знак);
кц
